{"ast":null,"code":"import _defineProperty from \"/Users/God/Desktop/github/SocialMedia/gamebook/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/God/Desktop/github/SocialMedia/gamebook/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/SocialMedia/gamebook/client/src/components/Login/LoginForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment, useContext, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Button, Icon, Typography } from '@material-ui/core';\nimport { AuthContext } from '../../contexts/AuthContext';\nconst initInfo = {\n  username: '',\n  email: '',\n  password: ''\n};\nconst initNotifications = {\n  open: false,\n  message: ''\n};\nconst useStyles = makeStyles(theme => ({\n  inputs: {\n    width: '100%',\n    marginTop: 20\n  },\n  button: {\n    width: '100%',\n    marginTop: 20\n  }\n}));\n\nconst LoginForm = () => {\n  const _useState = useState(_objectSpread({}, initInfo)),\n        _useState2 = _slicedToArray(_useState, 2),\n        info = _useState2[0],\n        setInfo = _useState2[1];\n\n  const _useState3 = useState(_objectSpread({}, initNotifications)),\n        _useState4 = _slicedToArray(_useState3, 2),\n        success = _useState4[0],\n        setSuccess = _useState4[1];\n\n  const _useState5 = useState(_objectSpread({}, initNotifications)),\n        _useState6 = _slicedToArray(_useState5, 2),\n        error = _useState6[0],\n        setError = _useState6[1];\n\n  const auth = useContext(AuthContext);\n  const classes = useStyles();\n\n  const handleOnSubmit = () => {\n    const email = info.email,\n          password = info.password;\n    fetch('/api/users/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        email,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n\n      if (result.error) {\n        return setError({\n          open: true,\n          message: result.message\n        });\n      }\n\n      auth.onLogin(result.user, result.token);\n    });\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Login\"), React.createElement(TextField, {\n    className: classes.inputs,\n    variant: \"outlined\",\n    label: \"Username\",\n    value: info.username,\n    onChange: e => setInfo(_objectSpread({}, info, {\n      username: e.target.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.inputs,\n    variant: \"outlined\",\n    label: \"Email\",\n    value: info.email,\n    onChange: e => setInfo(_objectSpread({}, info, {\n      email: e.target.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.inputs,\n    variant: \"outlined\",\n    label: \"Password\",\n    value: info.password,\n    onChange: e => setInfo(_objectSpread({}, info, {\n      password: e.target.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/God/Desktop/github/SocialMedia/gamebook/client/src/components/Login/LoginForm.js"],"names":["React","Fragment","useContext","useState","Redirect","makeStyles","TextField","Button","Icon","Typography","AuthContext","initInfo","username","email","password","initNotifications","open","message","useStyles","theme","inputs","width","marginTop","button","LoginForm","info","setInfo","success","setSuccess","error","setError","auth","classes","handleOnSubmit","fetch","method","body","JSON","stringify","headers","then","res","json","result","console","log","onLogin","user","token","e","target","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Button, Icon, Typography } from '@material-ui/core';\n\nimport { AuthContext } from '../../contexts/AuthContext';\n\nconst initInfo = {\n    username: '',\n    email: '',\n    password: '',\n};\n\nconst initNotifications = {\n    open: false,\n    message: '',\n};\n\nconst useStyles = makeStyles(theme => ({\n    inputs: {\n        width: '100%',\n        marginTop: 20,\n    },\n    button: {\n        width: '100%',\n        marginTop: 20,\n    },\n}))\n\nconst LoginForm = () => {\n\n    const [info, setInfo] = useState({ ...initInfo });\n    const [success, setSuccess] = useState({ ...initNotifications });\n    const [error, setError] = useState({ ...initNotifications })\n\n    const auth = useContext(AuthContext);\n    const classes = useStyles();\n\n    const handleOnSubmit = () => {\n        const { email, password } = info;\n        fetch('/api/users/login', {\n            method: 'POST',\n            body: JSON.stringify({ email, password }),\n            headers: { 'Content-Type': 'application/json' },\n        })\n            .then(res => res.json())\n            .then((result) => {\n                console.log(result);\n                if (result.error) {\n                    return setError({ open: true, message: result.message });\n                }\n                auth.onLogin(result.user, result.token);\n            });\n    }\n\n    return (\n        <Fragment>\n\n            <Typography variant=\"h5\">\n                Login\n            </Typography>\n\n            <TextField\n                className={classes.inputs}\n                variant=\"outlined\"\n                label=\"Username\"\n                value={info.username}\n                onChange={(e) => setInfo({ ...info, username: e.target.value })}\n            />\n\n            <TextField\n                className={classes.inputs}\n                variant=\"outlined\"\n                label=\"Email\"\n                value={info.email}\n                onChange={(e) => setInfo({ ...info, email: e.target.value})}\n            />\n\n            <TextField\n                className={classes.inputs}\n                variant=\"outlined\"\n                label=\"Password\"\n                value={info.password}\n                onChange={(e) => setInfo({ ...info, password: e.target.value})}\n            />\n\n            <Button className={classes.button}>\n                <Typography>\n                    Submit\n                </Typography>\n            </Button>\n\n        </Fragment>\n    );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}