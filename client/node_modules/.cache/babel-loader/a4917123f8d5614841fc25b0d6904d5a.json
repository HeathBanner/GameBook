{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/SocialMedia/gamebook/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/SocialMedia/gamebook/client/src/components/Story/Story.js\";\nimport React, { Fragment, useContext, useState } from 'react';\nimport { AuthContext } from '../../contexts/AuthContext';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport Fab from '@material-ui/core/Fab';\nimport Moment from 'moment';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    color: 'black !important'\n  },\n  postStory: {\n    marginLeft: '10px',\n    backgroundColor: 'rgb(255, 145, 71)',\n    '&:hover': {\n      backgroundColor: 'rgb(129, 0, 206)'\n    }\n  },\n  form: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '80%',\n    margin: '20px auto'\n  },\n  underline: {\n    '&:before': {\n      borderBottom: '1px solid rgb(129, 0, 206) !important'\n    },\n    '&:after': {\n      borderBottom: '2px solid rgb(255, 145, 71) !important'\n    },\n    '&:hover:before': {\n      borderBottom: '2px solid rgb(129, 0, 206) !important'\n    }\n  },\n  label: {\n    '&.Mui-focused': {\n      color: 'rgb(255, 145, 71)'\n    }\n  }\n}));\n\nconst Story = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        story = _useState2[0],\n        setStory = _useState2[1];\n\n  const classes = useStyles();\n  const auth = useContext(AuthContext);\n\n  const handleStoryPost = () => {\n    const userId = auth.user._id;\n    const infoId = auth.user.info._id;\n    const time = Moment();\n    fetch('/api/social/newStory', {\n      method: 'POST',\n      body: JSON.stringify({\n        userId,\n        infoId,\n        story,\n        time\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(user => {\n      console.log('New Story', user);\n      auth.updateNewStory(auth.user, true);\n    }).catch(() => {\n      console.log('Oops...');\n    });\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    InputProps: {\n      classes: {\n        underline: classes.underline\n      }\n    },\n    InputLabelProps: {\n      className: classes.label\n    },\n    multiline: true,\n    rowsMax: \"5\",\n    label: \"Story\",\n    helperText: \"Story here...\",\n    name: \"setStory\",\n    value: story,\n    onChange: e => setStory(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(Fab, {\n    className: classes.postStory,\n    onClick: handleStoryPost,\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"create\")));\n};\n\nexport default Story;","map":{"version":3,"sources":["/Users/God/Desktop/github/SocialMedia/gamebook/client/src/components/Story/Story.js"],"names":["React","Fragment","useContext","useState","AuthContext","TextField","makeStyles","Icon","Fab","Moment","useStyles","theme","root","color","postStory","marginLeft","backgroundColor","form","display","alignItems","justifyContent","width","margin","underline","borderBottom","label","Story","story","setStory","classes","auth","handleStoryPost","userId","user","_id","infoId","info","time","fetch","method","body","JSON","stringify","headers","then","res","json","console","log","updateNewStory","catch","className","e","target","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext, useState } from 'react';\n\nimport { AuthContext } from '../../contexts/AuthContext';\n\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport Fab from '@material-ui/core/Fab';\n\nimport Moment from 'moment';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        color: 'black !important',\n    },\n    postStory: {\n        marginLeft: '10px',\n        backgroundColor: 'rgb(255, 145, 71)',\n        '&:hover': {\n            backgroundColor: 'rgb(129, 0, 206)',\n        },\n    },\n    form: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '80%',\n        margin: '20px auto',\n    },\n    underline: {\n        '&:before': {\n            borderBottom: '1px solid rgb(129, 0, 206) !important',\n            },\n        '&:after': {\n            borderBottom: '2px solid rgb(255, 145, 71) !important',\n        },\n        '&:hover:before': {\n            borderBottom: '2px solid rgb(129, 0, 206) !important',\n        },\n    },\n    label: {\n        '&.Mui-focused': {\n            color: 'rgb(255, 145, 71)',\n        },\n    },\n}))\n\nconst Story = () => {\n    \n    const [story, setStory] = useState('');\n\n    const classes = useStyles();\n    const auth = useContext(AuthContext);\n\n    const handleStoryPost = () => {\n        const userId = auth.user._id;\n        const infoId = auth.user.info._id;\n        const time = Moment();\n        fetch('/api/social/newStory', {\n            method: 'POST',\n            body: JSON.stringify({ userId, infoId, story, time }),\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(res => res.json())\n            .then((user) => {\n                console.log('New Story', user);\n                auth.updateNewStory(auth.user, true);\n            })\n            .catch(() => { console.log('Oops...'); });\n    }\n\n    return (\n        <Fragment>\n\n            <TextField\n                InputProps={{\n                    classes: { underline: classes.underline },\n                }}\n                InputLabelProps={{ className: classes.label }}\n                multiline\n                rowsMax=\"5\"\n                label=\"Story\"\n                helperText=\"Story here...\"\n                name=\"setStory\"\n                value={story}\n                onChange={(e) => setStory(e.target.value)}\n            />\n\n            <Fab\n                className={classes.postStory}\n                onClick={handleStoryPost}\n                size=\"small\"\n            >\n                <Icon>create</Icon>\n            </Fab>\n        \n        </Fragment>\n    );\n};\n\nexport default Story;\n"]},"metadata":{},"sourceType":"module"}