{"ast":null,"code":"import _defineProperty from \"/Users/God/Desktop/github/SocialMedia/gamebook/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/God/Desktop/github/SocialMedia/gamebook/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/SocialMedia/gamebook/client/src/components/Register/RegisterForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Button, Icon, Typography, Paper, Snackbar, SnackbarContent } from '@material-ui/core';\nimport { AuthContext } from '../../contexts/AuthContext';\nimport SuccessNotification from '../Notifications/SuccessNotification';\nimport ErrorNotification from '../Notifications/ErrorNotification';\nimport WarningNotification from '../Notifications/WarningNotification';\nconst initInfo = {\n  username: '',\n  email: '',\n  password: ''\n};\nconst initNotifications = {\n  open: false,\n  message: ''\n};\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: 15,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexWrap: 'wrap'\n  },\n  inputs: {\n    width: '100%',\n    marginTop: 20\n  },\n  button: {\n    width: '100%',\n    marginTop: 20,\n    padding: 15,\n    background: 'rgb(0, 0, 0, 0.1)',\n    transition: 'all 0.4s ease',\n    '&:hover': {\n      background: 'rgb(0, 0, 0, 0.3)',\n      transform: 'scale(1.03)'\n    }\n  }\n}));\n\nconst LoginForm = () => {\n  const _useState = useState(_objectSpread({}, initInfo)),\n        _useState2 = _slicedToArray(_useState, 2),\n        info = _useState2[0],\n        setInfo = _useState2[1];\n\n  const _useState3 = useState(_objectSpread({}, initNotifications)),\n        _useState4 = _slicedToArray(_useState3, 2),\n        success = _useState4[0],\n        setSuccess = _useState4[1];\n\n  const _useState5 = useState(_objectSpread({}, initNotifications)),\n        _useState6 = _slicedToArray(_useState5, 2),\n        error = _useState6[0],\n        setError = _useState6[1];\n\n  const _useState7 = useState(_objectSpread({}, initNotifications)),\n        _useState8 = _slicedToArray(_useState7, 2),\n        warning = _useState8[0],\n        setWarning = _useState8[1];\n\n  const closeError = () => {\n    setError(_objectSpread({}, initNotifications));\n  };\n\n  const closeSuccess = () => {\n    setSuccess(_objectSpread({}, initNotifications));\n  };\n\n  const closeWarning = () => {\n    setWarning(_objectSpread({}, initNotifications));\n  };\n\n  const auth = useContext(AuthContext);\n  const classes = useStyles();\n\n  const preSubmit = () => {\n    switch (true) {\n      case info.username.length < 2:\n        return setWarning({\n          open: true,\n          message: 'Username have more than 2 characters!'\n        });\n\n      case info.password.length < 6:\n        return setWarning({\n          open: true,\n          message: 'Password must be more than 6 characters!'\n        });\n\n      default:\n        return handleSubmit();\n    }\n  };\n\n  const handleSubmit = () => {\n    const email = info.email,\n          password = info.password,\n          username = info.username;\n    fetch('/api/users/register', {\n      method: 'POST',\n      body: JSON.stringify({\n        email,\n        password,\n        username\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n\n      if (result.error) {\n        return setError({\n          open: true,\n          message: result.message\n        });\n      } // auth.onLogin(result.user, result.token);\n\n    });\n  };\n\n  return React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Sign Up\"), React.createElement(TextField, {\n    className: classes.inputs,\n    variant: \"outlined\",\n    label: \"Username\",\n    value: info.username,\n    onChange: e => setInfo(_objectSpread({}, info, {\n      username: e.target.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.inputs,\n    type: \"email\",\n    variant: \"outlined\",\n    label: \"Email\",\n    value: info.email,\n    onChange: e => setInfo(_objectSpread({}, info, {\n      email: e.target.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.inputs,\n    type: \"password\",\n    variant: \"outlined\",\n    label: \"Password\",\n    value: info.password,\n    onChange: e => setInfo(_objectSpread({}, info, {\n      password: e.target.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: classes.button,\n    onClick: preSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Submit\")), React.createElement(SuccessNotification, {\n    success: success,\n    closeSuccess: closeSuccess,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }), React.createElement(ErrorNotification, {\n    error: error,\n    closeError: closeError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), React.createElement(WarningNotification, {\n    warning: warning,\n    closeWarning: closeWarning,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/God/Desktop/github/SocialMedia/gamebook/client/src/components/Register/RegisterForm.js"],"names":["React","useContext","useState","Redirect","makeStyles","TextField","Button","Icon","Typography","Paper","Snackbar","SnackbarContent","AuthContext","SuccessNotification","ErrorNotification","WarningNotification","initInfo","username","email","password","initNotifications","open","message","useStyles","theme","paper","padding","display","justifyContent","alignItems","flexWrap","inputs","width","marginTop","button","background","transition","transform","LoginForm","info","setInfo","success","setSuccess","error","setError","warning","setWarning","closeError","closeSuccess","closeWarning","auth","classes","preSubmit","length","handleSubmit","fetch","method","body","JSON","stringify","headers","then","res","json","result","console","log","e","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    TextField,\n    Button,\n    Icon,\n    Typography,\n    Paper,\n    Snackbar,\n    SnackbarContent\n} from '@material-ui/core';\n\nimport { AuthContext } from '../../contexts/AuthContext';\n\nimport SuccessNotification from '../Notifications/SuccessNotification';\nimport ErrorNotification from '../Notifications/ErrorNotification';\nimport WarningNotification from '../Notifications/WarningNotification';\n\nconst initInfo = {\n    username: '',\n    email: '',\n    password: '',\n};\n\nconst initNotifications = {\n    open: false,\n    message: '',\n};\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        padding: 15,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexWrap: 'wrap',\n    },\n    inputs: {\n        width: '100%',\n        marginTop: 20,\n    },\n    button: {\n        width: '100%',\n        marginTop: 20,\n        padding: 15,\n        background: 'rgb(0, 0, 0, 0.1)',\n        transition: 'all 0.4s ease',\n        '&:hover': {\n            background: 'rgb(0, 0, 0, 0.3)',\n            transform: 'scale(1.03)',\n        },\n    },\n}));\n\nconst LoginForm = () => {\n\n    const [info, setInfo] = useState({ ...initInfo });\n    const [success, setSuccess] = useState({ ...initNotifications });\n    const [error, setError] = useState({ ...initNotifications });\n    const [warning, setWarning] = useState({ ...initNotifications });\n\n    const closeError = () => { setError({ ...initNotifications }); };\n    const closeSuccess = () => { setSuccess({ ...initNotifications }); };\n    const closeWarning = () => { setWarning({ ...initNotifications })}\n\n    const auth = useContext(AuthContext);\n    const classes = useStyles();\n\n    const preSubmit = () => {\n        switch (true) {\n            case info.username.length < 2:\n                return setWarning({\n                    open: true,\n                    message: 'Username have more than 2 characters!',\n                });\n            case info.password.length < 6:\n                return setWarning({\n                    open: true,\n                    message: 'Password must be more than 6 characters!',\n                });\n            default:\n                return handleSubmit();\n        }\n    };\n\n    const handleSubmit = () => {\n        const { email, password, username } = info;\n        fetch('/api/users/register', {\n            method: 'POST',\n            body: JSON.stringify({ email, password, username }),\n            headers: { 'Content-Type': 'application/json' },\n        })\n            .then(res => res.json())\n            .then((result) => {\n                console.log(result);\n                if (result.error) {\n                    return setError({ open: true, message: result.message });\n                }\n                // auth.onLogin(result.user, result.token);\n            });\n    }\n\n    return (\n        <Paper className={classes.paper}>\n\n            <Typography variant=\"h4\">\n                Sign Up\n            </Typography>\n\n            <TextField\n                className={classes.inputs}\n                variant=\"outlined\"\n                label=\"Username\"\n                value={info.username}\n                onChange={(e) => setInfo({ ...info, username: e.target.value })}\n            />\n\n            <TextField\n                className={classes.inputs}\n                type=\"email\"\n                variant=\"outlined\"\n                label=\"Email\"\n                value={info.email}\n                onChange={(e) => setInfo({ ...info, email: e.target.value})}\n            />\n\n            <TextField\n                className={classes.inputs}\n                type=\"password\"\n                variant=\"outlined\"\n                label=\"Password\"\n                value={info.password}\n                onChange={(e) => setInfo({ ...info, password: e.target.value})}\n            />\n\n            <Button\n                className={classes.button}\n                onClick={preSubmit}\n            >\n                <Typography>\n                    Submit\n                </Typography>\n            </Button>\n\n            <SuccessNotification\n                success={success}\n                closeSuccess={closeSuccess}\n            />\n            <ErrorNotification\n                error={error}\n                closeError={closeError}\n            />\n            <WarningNotification\n                warning={warning}\n                closeWarning={closeWarning}\n            />\n\n        </Paper>\n    );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}