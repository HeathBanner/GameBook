{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/SocialMedia/gamebook/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/SocialMedia/gamebook/client/src/components/Story/Story.js\";\nimport React, { Fragment, useContext } from 'react';\nimport AuthContext from '../../../context/AuthContext';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport Fab from '@material-ui/core/Fab';\nimport Moment from 'moment';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // marginTop: '40px',\n    color: 'black !important' // width: '60% !important',\n    // flexWrap: 'wrap',\n    // flexDirection: 'column',\n\n  },\n  label: {// color: 'black !important',\n  },\n  postStory: {\n    marginLeft: '10px',\n    backgroundColor: 'rgb(255, 145, 71)',\n    '&:hover': {\n      backgroundColor: 'rgb(129, 0, 206)'\n    }\n  },\n  form: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '80%',\n    margin: '20px auto'\n  },\n  underline: {\n    '&:before': {\n      borderBottom: '1px solid rgb(129, 0, 206) !important'\n    },\n    '&:after': {\n      borderBottom: '2px solid rgb(255, 145, 71) !important'\n    },\n    '&:hover:before': {\n      borderBottom: '2px solid rgb(129, 0, 206) !important'\n    }\n  },\n  label: {\n    '&.Mui-focused': {\n      color: 'rgb(255, 145, 71)'\n    }\n  }\n}));\n\nfunction Story() {\n  const _React$useState = React.useState(''),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        story = _React$useState2[0],\n        setStory = _React$useState2[1];\n\n  const classes = useStyles();\n  const auth = useContext(AuthContext);\n\n  function handleInputChange(e) {\n    const value = e.target.value;\n    setStory(value);\n  }\n\n  function handleStoryPost() {\n    const userId = auth.user._id;\n    const infoId = auth.user.info._id;\n    const time = Moment();\n    fetch('/api/social/newStory', {\n      method: 'POST',\n      body: JSON.stringify({\n        userId: userId,\n        infoId: infoId,\n        story: story,\n        time: time\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(user => {\n      console.log(user);\n      auth.updateDidMount();\n      auth.updateNewStory(auth.user, true);\n    });\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: classes.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    InputProps: {\n      classes: {\n        underline: classes.underline\n      }\n    },\n    InputLabelProps: {\n      className: classes.label\n    },\n    multiline: true,\n    fullWidth: false,\n    rowsMax: \"8\",\n    label: \"Story\",\n    helperText: \"Story here...\",\n    name: \"setStory\",\n    value: story,\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(Fab, {\n    onClick: handleStoryPost,\n    size: \"small\",\n    className: classes.postStory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"create\"))));\n}\n\nexport default Story;","map":{"version":3,"sources":["/Users/God/Desktop/github/SocialMedia/gamebook/client/src/components/Story/Story.js"],"names":["React","Fragment","useContext","AuthContext","TextField","makeStyles","Icon","Fab","Moment","useStyles","theme","root","color","label","postStory","marginLeft","backgroundColor","form","display","alignItems","justifyContent","width","margin","underline","borderBottom","Story","useState","story","setStory","classes","auth","handleInputChange","e","value","target","handleStoryPost","userId","user","_id","infoId","info","time","fetch","method","body","JSON","stringify","headers","then","res","json","console","log","updateDidMount","updateNewStory","className"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext } from 'react';\n\nimport AuthContext from '../../../context/AuthContext';\n\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport Fab from '@material-ui/core/Fab';\n\nimport Moment from 'moment';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        // marginTop: '40px',\n        color: 'black !important',\n        // width: '60% !important',\n        // flexWrap: 'wrap',\n        // flexDirection: 'column',\n    },\n    label: {\n        // color: 'black !important',\n    },\n    postStory: {\n        marginLeft: '10px',\n        backgroundColor: 'rgb(255, 145, 71)',\n        '&:hover': {\n            backgroundColor: 'rgb(129, 0, 206)',\n        }\n\n    },\n    form: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '80%',\n        margin: '20px auto',\n    },\n    underline: {\n        '&:before': {\n            borderBottom: '1px solid rgb(129, 0, 206) !important',\n            },\n        '&:after': {\n            borderBottom: '2px solid rgb(255, 145, 71) !important',\n        },\n        '&:hover:before': {\n            borderBottom: '2px solid rgb(129, 0, 206) !important',\n        }\n    },\n    label: {\n        '&.Mui-focused': {\n            color: 'rgb(255, 145, 71)'\n        }\n    }\n}))\n\n\nfunction Story() {\n    \n    const [story, setStory] = React.useState('')\n\n    const classes = useStyles();\n    const auth = useContext(AuthContext)\n\n    function handleInputChange(e) {\n        const { value } = e.target\n        setStory(value)\n    }\n\n    function handleStoryPost() {\n        const userId = auth.user._id;\n        const infoId = auth.user.info._id;\n        const time = Moment();\n        fetch('/api/social/newStory', {\n            method: 'POST',\n            body: JSON.stringify({userId: userId, infoId: infoId,story: story, time: time}),\n            headers: {'Content-Type': 'application/json'}\n        }).then(res => res.json())\n        .then((user) => {\n            console.log(user);\n            auth.updateDidMount()\n            auth.updateNewStory(auth.user, true);\n        })\n    }\n\n    return (\n        <Fragment>\n            <form className={classes.form}>\n                    <TextField\n                        InputProps={{classes:{underline: classes.underline}}}\n                        InputLabelProps={{className: classes.label}}\n                        multiline\n                        fullWidth={false}\n                        rowsMax=\"8\"\n                        label=\"Story\"\n                        helperText=\"Story here...\"\n                        name=\"setStory\"\n                        value={story}\n                        onChange={handleInputChange}\n                    />\n                    <Fab onClick={handleStoryPost} size=\"small\" className={classes.postStory}><Icon>create</Icon></Fab>\n            </form>\n        </Fragment>\n    );\n}\n\nexport default Story;"]},"metadata":{},"sourceType":"module"}