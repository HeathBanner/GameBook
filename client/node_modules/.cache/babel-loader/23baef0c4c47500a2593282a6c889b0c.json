{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/SocialMedia/gamebook/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/SocialMedia/gamebook/client/src/components/Home/FriendSideBar.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { GridList, GridListTile, GridListTileBar, ListSubheader, IconButton, Icon, Typography } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    width: '100%',\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    margin: '0 auto'\n  },\n  subheader: {\n    textAlign: 'center',\n    margin: '20px 0px'\n  },\n  tile: {\n    marginRight: '10px',\n    marginBottom: '10px',\n    padding: '0px 0px !important',\n    width: '200px',\n    height: '200px',\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    boxShadow: '0px 1px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)'\n  },\n  img: {},\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)'\n  }\n}));\n\nconst Friends = props => {\n  const classes = useStyles();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        friendList = _useState2[0],\n        setFriendList = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loaded = _useState4[0],\n        setLoaded = _useState4[1]; // useEffect(() => {\n  //     if((!loaded) && (props.user)) {\n  //         fetch('/api/social/getFriends', {\n  //             method: 'POST',\n  //             body: JSON.stringify({id: props.user._id}),\n  //             headers: {'Content-Type': 'application/json'}\n  //         }).then(res => res.json())\n  //         .then((result) => {\n  //             setFriendList([...result])\n  //             setLoaded(true);\n  //         });\n  //     };\n  // }, []);\n  // const renderFriends = () => {\n  //     if(loaded){\n  //         return (\n  //             friendList.map((friend, index) => {\n  //                 return (\n  //                     <GridListTile cols={1.5}  className={classes.tile} style={{backgroundImage: `url(${friend.info.skyline})`}} key={friend._id} >\n  //                         <Link to={`/social/${friend.username}`} params={friend}>\n  //                             <GridListTileBar \n  //                                 title={friend.username}\n  //                                 actionIcon={\n  //                                     <IconButton className={classes.icon}>\n  //                                         <Icon>exit_to_app</Icon>\n  //                                     </IconButton>\n  //                                 }\n  //                             />\n  //                         </Link>\n  //                     </GridListTile>\n  //                 )\n  //             })  \n  //         );\n  //     } else {\n  //         return (\n  //             <Typography variant=\"h3\" align=\"center\" color=\"textSecondary\" >\n  //                 Sorry, no photos {`¯|_(ツ)_/¯`}\n  //             </Typography>\n  //         );\n  //     }\n  // }\n\n\n  return React.createElement(\"div\", {\n    className: \"col-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(GridList, {\n    cellHeight: 180,\n    col: 2.5,\n    className: classes.gridList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(GridListTile, {\n    key: \"Subheader\",\n    cols: 2,\n    style: {\n      height: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(ListSubheader, {\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    className: classes.subheader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Friends\")))));\n};\n\nexport default Friends;","map":{"version":3,"sources":["/Users/God/Desktop/github/SocialMedia/gamebook/client/src/components/Home/FriendSideBar.js"],"names":["React","Fragment","useState","useEffect","Link","makeStyles","GridList","GridListTile","GridListTileBar","ListSubheader","IconButton","Icon","Typography","useStyles","theme","root","display","flexWrap","justifyContent","backgroundColor","palette","background","paper","gridList","width","margin","subheader","textAlign","tile","marginRight","marginBottom","padding","height","backgroundSize","backgroundPosition","boxShadow","img","icon","color","Friends","props","classes","friendList","setFriendList","loaded","setLoaded"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { GridList, GridListTile, GridListTileBar, ListSubheader, IconButton, Icon, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n        width: '100%',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        margin: '0 auto',\n    },\n    subheader: {\n        textAlign: 'center',\n        margin: '20px 0px',\n    },\n    tile: {\n        marginRight: '10px',\n        marginBottom: '10px',\n        padding: '0px 0px !important',\n        width: '200px',\n        height: '200px',\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        boxShadow: '0px 1px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)',\n    },\n    img: {\n    },\n    icon: {\n        color: 'rgba(255, 255, 255, 0.54)',\n    },\n}));\n\nconst Friends = (props) => {\n\n    const classes = useStyles();\n\n    const [friendList, setFriendList] = useState([]);\n    const [loaded, setLoaded] = useState(false);\n\n    // useEffect(() => {\n    //     if((!loaded) && (props.user)) {\n    //         fetch('/api/social/getFriends', {\n    //             method: 'POST',\n    //             body: JSON.stringify({id: props.user._id}),\n    //             headers: {'Content-Type': 'application/json'}\n    //         }).then(res => res.json())\n    //         .then((result) => {\n    //             setFriendList([...result])\n    //             setLoaded(true);\n    //         });\n    //     };\n    // }, []);\n\n    // const renderFriends = () => {\n        \n    //     if(loaded){\n    //         return (\n    //             friendList.map((friend, index) => {\n    //                 return (\n    //                     <GridListTile cols={1.5}  className={classes.tile} style={{backgroundImage: `url(${friend.info.skyline})`}} key={friend._id} >\n    //                         <Link to={`/social/${friend.username}`} params={friend}>\n    //                             <GridListTileBar \n    //                                 title={friend.username}\n    //                                 actionIcon={\n    //                                     <IconButton className={classes.icon}>\n    //                                         <Icon>exit_to_app</Icon>\n    //                                     </IconButton>\n    //                                 }\n    //                             />\n    //                         </Link>\n    //                     </GridListTile>\n    //                 )\n    //             })  \n    //         );\n    //     } else {\n    //         return (\n    //             <Typography variant=\"h3\" align=\"center\" color=\"textSecondary\" >\n    //                 Sorry, no photos {`¯|_(ツ)_/¯`}\n    //             </Typography>\n    //         );\n    //     }\n    // }\n\n    return (\n        <div className=\"col-12\">\n                <GridList cellHeight={180} col={2.5} className={classes.gridList}>\n                    <GridListTile key=\"Subheader\" cols={2} style={{height: 'auto'}}>\n                        <ListSubheader component=\"div\">\n                            <Typography variant=\"h4\" className={classes.subheader}>Friends</Typography>\n                        </ListSubheader>\n                    </GridListTile>\n                    {/* {renderFriends()} */}\n                </GridList>\n        </div>\n    );\n}\n\nexport default Friends;"]},"metadata":{},"sourceType":"module"}