{"version":3,"sources":["library/TokenStore.js","contexts/AuthContext.js","contexts/MediaContext.js","pages/Main/Temp.js","components/Notifications/SuccessNotification.js","components/Notifications/ErrorNotification.js","components/Notifications/WarningNotification.js","components/Login/LoginForm.js","pages/Login/Login.js","components/Register/RegisterForm.js","pages/Register/Register.js","App.js","serviceWorker.js","index.js"],"names":["TokenStore","token","localStorage","setItem","getItem","removeItem","AuthContext","createContext","initUser","info","getToken","AuthProvider","props","useState","user","setUser","loggedIn","setLoggedIn","Provider","value","handleLogin","authToken","setToken","handleLogout","clearToken","getNewStory","fetch","then","res","json","catch","console","log","children","MediaContext","MediaProvider","theme","useTheme","xl","useMediaQuery","breakpoints","up","lg","down","md","sm","xs","useStyles","makeStyles","container","height","display","alignItems","alignContent","justifyContent","flexWrap","background","button","marginTop","padding","color","transition","transform","Temp","classes","Grid","className","item","Typography","style","width","align","variant","Button","textDecoration","to","success","backgroundColor","green","paddingTop","message","icon","position","top","left","right","SuccessNotification","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onExit","toLogin","SnackbarContent","Icon","action","onClick","closeSuccess","error","palette","dark","ErrorNotification","onClose","closeError","warning","amber","WarningNotification","closeWarning","initInfo","email","password","initNotifications","paper","inputs","signup","LoginForm","auth","useContext","setInfo","setSuccess","setError","setWarning","setToLogin","handleSubmit","method","body","JSON","stringify","headers","result","Paper","TextField","type","label","onChange","e","target","length","Login","username","login","Register","RegisterForm","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yMAYeA,E,sGAXKC,GACZC,aAAaC,QAAQ,QAASF,K,iCAG9B,OAAOC,aAAaE,QAAQ,W,mCAG5BF,aAAaG,WAAW,a,wjBCDzB,IAAMC,EAAcC,0BAErBC,EAAW,CACfC,KAAM,GACNR,MAAOD,EAAWU,YAGPC,EAAe,SAACC,GAAW,IAAD,EAEbC,mBAAS,EAAD,GAAML,IAFD,mBAE9BM,EAF8B,KAExBC,EAFwB,OAGLF,oBAAS,GAHJ,mBAG9BG,EAH8B,KAGpBC,EAHoB,KAqCrC,OACE,kBAACX,EAAYY,SAAb,CACEC,MAAO,CACLL,OACAM,YAzBc,SAACN,EAAMO,GACzBrB,EAAWsB,SAASD,GACpBN,EAAQ,CACNN,KAAK,EAAD,GAAOK,GACXb,MAAOoB,KAsBLE,aAlBe,WAGnB,OAFAvB,EAAWwB,aACXT,EAAQ,EAAD,GAAMP,IACNS,GAAY,IAgBfD,WACAS,YAdc,WAClBC,MAAM,wBACHC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAACb,GAAW,OAAOC,EAAQ,EAAD,GAAMD,MACrCgB,MAAM,WAAQC,QAAQC,IAAI,iBAa1BpB,EAAMqB,W,0BCxDAC,EAAe3B,0BAEf4B,EAAgB,SAACvB,GAE1B,IAAMwB,EAAQC,MAERC,EAAKC,YAAcH,EAAMI,YAAYC,GAAG,OACxCC,EAAKH,YAAcH,EAAMI,YAAYG,KAAK,OAC1CC,EAAKL,YAAcH,EAAMI,YAAYG,KAAK,OAC1CE,EAAKN,YAAcH,EAAMI,YAAYG,KAAK,OAC1CG,EAAKP,YAAcH,EAAMI,YAAYG,KAAK,OAEhD,OACI,kBAACT,EAAahB,SAAd,CAAuBC,MAAO,CAAEmB,KAAII,KAAIE,KAAIC,KAAIC,OAC1ClC,EAAMqB,W,oCCTdc,EAAYC,YAAW,SAACZ,GAAD,MAAY,CACrCa,UAAW,CACPC,OAAQ,QACRC,QAAS,OACTC,WAAY,SACZC,aAAc,SACdC,eAAgB,SAChBC,SAAU,OACVC,WAAY,i6FAEhBC,OAAQ,CACJC,UAAW,GACXC,QAAS,GACTC,MAAO,QACPJ,WAAY,0BACZK,WAAY,gBACZ,UAAW,CACPL,WAAY,0BACZM,UAAW,mBA6CRC,EAxCF,WAET,IAAMC,EAAUjB,IAEhB,OACI,kBAACkB,EAAA,EAAD,CAAMhB,WAAS,GAEX,kBAACgB,EAAA,EAAD,CAAMC,UAAWF,EAAQf,UAAWkB,MAAI,EAACrB,GAAI,IAEzC,kBAACsB,EAAA,EAAD,CACIC,MAAO,CACHT,MAAO,QACPU,MAAO,QAEXC,MAAM,SACNC,QAAQ,MANZ,WAWA,kBAACC,EAAA,EAAD,CAAQP,UAAWF,EAAQP,QACvB,kBAAC,IAAD,CACCY,MAAO,CACHK,eAAgB,OAChBd,MAAO,WAEXe,GAAG,UAEA,kBAACP,EAAA,EAAD,mB,sDCjDlBrB,EAAYC,YAAW,SAACZ,GAAD,MAAY,CACrCwC,QAAS,CACLC,gBAAiBC,IAAM,KACvBC,WAAY,GACZ5B,QAAS,OACTC,WAAY,SACZE,eAAgB,UAEpB0B,QAAS,CACLD,WAAY,GACZT,MAAO,QAEXW,KAAM,CACFC,SAAU,WACVC,IAAK,EACLC,KAAM,OAEV3B,OAAQ,CACJyB,SAAU,WACVC,IAAK,EACLE,MAAO,MA+CAC,EA3Ca,SAAC1E,GAEzB,IAAMoD,EAAUjB,IAEhB,OACI,kBAACwC,EAAA,EAAD,CACIC,aAAc,CACVC,SAAU,MACVC,WAAY,UAEhBC,KAAM/E,EAAMgE,QAAQe,KACpBC,iBAAkB,IAClBC,OAAQjF,EAAMkF,SAEd,kBAACC,EAAA,EAAD,CACI7B,UAAWF,EAAQY,QACnBZ,QAAS,CACLgB,QAAShB,EAAQgB,SAErBA,QACI,kBAACZ,EAAA,EAAD,CACII,QAAQ,QACRD,MAAM,UAEN,kBAACyB,EAAA,EAAD,CAAM9B,UAAWF,EAAQiB,MAAzB,SAGCrE,EAAMgE,QAAQI,SAGvBiB,OACI,kBAACxB,EAAA,EAAD,CACIP,UAAWF,EAAQP,OACnByC,QAAStF,EAAMuF,cAEf,kBAACH,EAAA,EAAD,mBC5DlBjD,EAAYC,YAAW,SAACZ,GAAD,MAAY,CACrCgE,MAAO,CACHvB,gBAAiBzC,EAAMiE,QAAQD,MAAME,KACrCvB,WAAY,GACZ5B,QAAS,OACTC,WAAY,SACZE,eAAgB,UAEpB0B,QAAS,CACLD,WAAY,GACZT,MAAO,QAEXW,KAAM,CACFC,SAAU,WACVC,IAAK,EACLC,KAAM,OAEV3B,OAAQ,CACJyB,SAAU,WACVC,IAAK,EACLE,MAAO,MA+CAkB,EA3CW,SAAC3F,GAEvB,IAAMoD,EAAUjB,IAEhB,OACI,kBAACwC,EAAA,EAAD,CACIC,aAAc,CACVC,SAAU,MACVC,WAAY,UAEhBC,KAAM/E,EAAMwF,MAAMT,KAClBC,iBAAkB,IAClBY,QAAS5F,EAAM6F,YAEf,kBAACV,EAAA,EAAD,CACI7B,UAAWF,EAAQoC,MACnBpC,QAAS,CACLgB,QAAShB,EAAQgB,SAErBA,QACI,kBAACZ,EAAA,EAAD,CACII,QAAQ,QACRD,MAAM,UAEN,kBAACyB,EAAA,EAAD,CAAM9B,UAAWF,EAAQiB,MAAzB,SAGCrE,EAAMwF,MAAMpB,SAGrBiB,OACI,kBAACxB,EAAA,EAAD,CACIP,UAAWF,EAAQP,OACnByC,QAAStF,EAAM6F,YAEf,kBAACT,EAAA,EAAD,mB,SC1DlBjD,EAAYC,YAAW,SAACZ,GAAD,MAAY,CACrCsE,QAAS,CACL3B,WAAY,GACZF,gBAAiB8B,IAAM,KACvBxD,QAAS,OACTC,WAAY,SACZE,eAAgB,UAEpB0B,QAAS,CACLD,WAAY,GACZT,MAAO,QAEXW,KAAM,CACFC,SAAU,WACVC,IAAK,EACLC,KAAM,OAEV3B,OAAQ,CACJyB,SAAU,WACVC,IAAK,EACLE,MAAO,MAkDAuB,EA9Ca,SAAChG,GAEzB,IAAMoD,EAAUjB,IAEhB,OACI,kBAACwC,EAAA,EAAD,CACIC,aAAc,CACVC,SAAU,MACVC,WAAY,UAEhBC,KAAM/E,EAAM8F,QAAQf,KACpBC,iBAAkB,IAClBY,QAAS5F,EAAMiG,cAEf,kBAACd,EAAA,EAAD,CACI7B,UAAWF,EAAQ0C,QACnB1C,QAAS,CACLgB,QAAShB,EAAQgB,SAErBiB,OACI,kBAACxB,EAAA,EAAD,CACIP,UAAWF,EAAQP,OACnByC,QAAStF,EAAMiG,cAEf,kBAACb,EAAA,EAAD,eAGRhB,QACI,kBAACZ,EAAA,EAAD,CACII,QAAQ,QACRD,MAAM,UAGN,kBAACyB,EAAA,EAAD,CAAM9B,UAAWF,EAAQiB,MAAzB,WAICrE,EAAM8F,QAAQ1B,a,mjBCxDvC,IAAM8B,EAAW,CACbC,MAAO,GACPC,SAAU,IAGRC,EAAoB,CACtBtB,MAAM,EACNX,QAAS,IAGPjC,EAAYC,YAAW,SAAAZ,GAAK,MAAK,CACnC8E,MAAO,CACHvD,QAAS,GACTR,QAAS,OACTG,eAAgB,SAChBF,WAAY,SACZG,SAAU,QAEd4D,OAAQ,CACJ7C,MAAO,OACPZ,UAAW,IAEfD,OAAQ,CACJa,MAAO,OACPZ,UAAW,GACXC,QAAS,GACTH,WAAY,oBACZK,WAAY,gBACZ,UAAW,CACPL,WAAY,oBACZM,UAAW,gBAGnBsD,OAAQ,CACJ9C,MAAO,OACPZ,UAAW,GACXC,QAAS,GACTH,WAAY,wBACZK,WAAY,gBACZ,UAAW,CACPL,WAAY,oBACZM,UAAW,mBAkIRuD,EA7HG,WAEd,IAAMC,EAAOC,qBAAWjH,GAClB0D,EAAUjB,IAHI,EAKIlC,mBAAS,KAAKiG,IALlB,mBAKbrG,EALa,KAKP+G,EALO,OAMU3G,mBAAS,KAAKoG,IANxB,mBAMbrC,EANa,KAMJ6C,EANI,OAOM5G,mBAAS,KAAKoG,IAPpB,mBAObb,EAPa,KAONsB,EAPM,OAQU7G,mBAAS,KAAKoG,IARxB,mBAQbP,EARa,KAQJiB,EARI,OASU9G,oBAAS,GATnB,mBASbiF,EATa,KASJ8B,EATI,KAgCdC,EAAe,WAAO,IAChBd,EAAoBtG,EAApBsG,MAAOC,EAAavG,EAAbuG,SACftF,MAAM,mBAAoB,CACtBoG,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAElB,QAAOC,aAC9BkB,QAAS,CAAE,eAAgB,sBAE1BvG,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAACwG,GACH,GAAIA,EAAO/B,MACP,OAAOsB,EAAS,CAAE/B,MAAM,EAAMX,QAASmD,EAAOnD,UAElDsC,EAAKlG,YAAY+G,EAAOrH,KAAMqH,EAAOlI,OACrCuH,EAAQ,KAAKV,IACbW,EAAW,CACP9B,MAAM,EACNX,QAAS,wBAGhBlD,MAAM,WAAQ4F,EAAS,CAAE/B,MAAM,EAAMX,QAAS,6BAKvD,OAAIc,EAAkB,kBAAC,IAAD,CAAUnB,GAAG,MAE/B,kBAACyD,EAAA,EAAD,CAAOlE,UAAWF,EAAQkD,OAEtB,kBAAC9C,EAAA,EAAD,CAAYI,QAAQ,MAApB,SAIA,kBAAC6D,EAAA,EAAD,CACInE,UAAWF,EAAQmD,OACnBmB,KAAK,QACL9D,QAAQ,WACR+D,MAAM,QACNpH,MAAOV,EAAKsG,MACZyB,SAAU,SAACC,GAAD,OAAOjB,EAAQ,KAAK/G,EAAN,CAAYsG,MAAO0B,EAAEC,OAAOvH,YAGxD,kBAACkH,EAAA,EAAD,CACInE,UAAWF,EAAQmD,OACnBmB,KAAK,WACL9D,QAAQ,WACR+D,MAAM,WACNpH,MAAOV,EAAKuG,SACZwB,SAAU,SAACC,GAAD,OAAOjB,EAAQ,KAAK/G,EAAN,CAAYuG,SAAUyB,EAAEC,OAAOvH,YAG3D,kBAACsD,EAAA,EAAD,CACIP,UAAWF,EAAQP,OACnByC,QArEM,WACd,QAAQ,GACJ,KAAKzF,EAAKsG,MAAM4B,OAAS,EACrB,OAAOhB,EAAW,CACdhC,MAAM,EACNX,QAAS,qBAEjB,KAAKvE,EAAKuG,SAAS2B,OAAS,EACxB,OAAOhB,EAAW,CACdhC,MAAM,EACNX,QAAS,wBAEjB,QACI,OAAO6C,OA0DP,kBAACzD,EAAA,EAAD,gBAKJ,kBAACK,EAAA,EAAD,CACIP,UAAWF,EAAQoD,QAEnB,kBAAC,IAAD,CACI/C,MAAO,CACHK,eAAgB,OAChBd,MAAO,WAEXe,GAAG,aAEH,kBAACP,EAAA,EAAD,kBAMR,kBAAC,EAAD,CACIQ,QAASA,EACTuB,aAjGS,WAAQsB,EAAW,KAAKR,KAkGjCnB,QAxDW,WAAQ8B,GAAW,MA0DlC,kBAAC,EAAD,CACIxB,MAAOA,EACPK,WAvGO,WAAQiB,EAAS,KAAKT,OAyGjC,kBAAC,EAAD,CACIP,QAASA,EACTG,aAzGS,WAAQc,EAAW,KAAKV,SCrE3ClE,EAAYC,YAAW,SAACZ,GAAD,MAAY,CACrCa,UAAW,CACPC,OAAQ,QACRS,QAAS,WACTR,QAAS,OACTC,WAAY,SACZC,aAAc,SACdC,eAAgB,SAChBC,SAAU,OACVC,WAAY,s3BAqBLoF,EAjBD,WAEV,IAAM5E,EAAUjB,IAEhB,OACI,kBAACkB,EAAA,EAAD,CAAMhB,WAAS,GAEX,kBAACgB,EAAA,EAAD,CAAMC,UAAWF,EAAQf,UAAWkB,MAAI,EAACrB,GAAI,IAEzC,kBAAC,EAAD,S,mjBCbhB,IAAMgE,EAAW,CACb+B,SAAU,GACV9B,MAAO,GACPC,SAAU,IAGRC,GAAoB,CACtBtB,MAAM,EACNX,QAAS,IAGPjC,GAAYC,YAAW,SAAAZ,GAAK,MAAK,CACnC8E,MAAO,CACHvD,QAAS,GACTR,QAAS,OACTG,eAAgB,SAChBF,WAAY,SACZG,SAAU,QAEd4D,OAAQ,CACJ7C,MAAO,OACPZ,UAAW,IAEfD,OAAQ,CACJa,MAAO,OACPZ,UAAW,GACXC,QAAS,GACTH,WAAY,oBACZK,WAAY,gBACZ,UAAW,CACPL,WAAY,oBACZM,UAAW,gBAGnBgF,MAAO,CACHxE,MAAO,OACPZ,UAAW,GACXC,QAAS,GACTH,WAAY,wBACZK,WAAY,gBACZ,UAAW,CACPL,WAAY,oBACZM,UAAW,mBAoIRuD,GA/HG,WAAO,IAAD,EAEIxG,mBAAS,KAAKiG,IAFlB,mBAEbrG,EAFa,KAEP+G,EAFO,OAGU3G,mBAAS,KAAKoG,KAHxB,mBAGbrC,EAHa,KAGJ6C,EAHI,OAIM5G,mBAAS,KAAKoG,KAJpB,mBAIbb,EAJa,KAINsB,EAJM,OAKU7G,mBAAS,KAAKoG,KALxB,mBAKbP,EALa,KAKJiB,EALI,OAMU9G,oBAAS,GANnB,mBAMbiF,EANa,KAMJ8B,EANI,KAYd5D,EAAUjB,KAmBV8E,EAAe,WAAO,IAChBd,EAA8BtG,EAA9BsG,MAAOC,EAAuBvG,EAAvBuG,SAAU6B,EAAapI,EAAboI,SACzBnH,MAAM,sBAAuB,CACzBoG,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAElB,QAAOC,WAAU6B,aACxCX,QAAS,CAAE,eAAgB,sBAE1BvG,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAACwG,GACH,GAAIA,EAAO/B,MACP,OAAOsB,EAAS,CAAE/B,MAAM,EAAMX,QAASmD,EAAOnD,UAElDwC,EAAQ,KAAKV,IACbW,EAAW,CAAE9B,MAAM,EAAMX,QAASmD,EAAOnD,aAMrD,OAAIc,EAAkB,kBAAC,IAAD,CAAUnB,GAAG,WAE/B,kBAACyD,EAAA,EAAD,CAAOlE,UAAWF,EAAQkD,OAEtB,kBAAC9C,EAAA,EAAD,CAAYI,QAAQ,MAApB,WAIA,kBAAC6D,EAAA,EAAD,CACInE,UAAWF,EAAQmD,OACnB3C,QAAQ,WACR+D,MAAM,WACNpH,MAAOV,EAAKoI,SACZL,SAAU,SAACC,GAAD,OAAOjB,EAAQ,KAAK/G,EAAN,CAAYoI,SAAUJ,EAAEC,OAAOvH,YAG3D,kBAACkH,EAAA,EAAD,CACInE,UAAWF,EAAQmD,OACnBmB,KAAK,QACL9D,QAAQ,WACR+D,MAAM,QACNpH,MAAOV,EAAKsG,MACZyB,SAAU,SAACC,GAAD,OAAOjB,EAAQ,KAAK/G,EAAN,CAAYsG,MAAO0B,EAAEC,OAAOvH,YAGxD,kBAACkH,EAAA,EAAD,CACInE,UAAWF,EAAQmD,OACnBmB,KAAK,WACL9D,QAAQ,WACR+D,MAAM,WACNpH,MAAOV,EAAKuG,SACZwB,SAAU,SAACC,GAAD,OAAOjB,EAAQ,KAAK/G,EAAN,CAAYuG,SAAUyB,EAAEC,OAAOvH,YAG3D,kBAACsD,EAAA,EAAD,CACIP,UAAWF,EAAQP,OACnByC,QAxEM,WACd,QAAQ,GACJ,KAAKzF,EAAKoI,SAASF,OAAS,EACxB,OAAOhB,EAAW,CACdhC,MAAM,EACNX,QAAS,+CAEjB,KAAKvE,EAAKuG,SAAS2B,OAAS,EACxB,OAAOhB,EAAW,CACdhC,MAAM,EACNX,QAAS,6CAEjB,QACI,OAAO6C,OA6DP,kBAACzD,EAAA,EAAD,gBAKJ,kBAACK,EAAA,EAAD,CACIP,UAAWF,EAAQ8E,OAEnB,kBAAC,IAAD,CACIzE,MAAO,CACHK,eAAgB,OAChBd,MAAO,WAEXe,GAAG,UAEH,kBAACP,EAAA,EAAD,gBAMR,kBAAC,EAAD,CACIQ,QAASA,EACTuB,aAtGS,WAAQsB,EAAW,KAAKR,MAuGjCnB,QAhEW,WAAQ8B,GAAW,MAkElC,kBAAC,EAAD,CACIxB,MAAOA,EACPK,WA5GO,WAAQiB,EAAS,KAAKT,QA8GjC,kBAAC,EAAD,CACIP,QAASA,EACTG,aA9GS,WAAQc,EAAW,KAAKV,UClE3ClE,GAAYC,YAAW,SAACZ,GAAD,MAAY,CACrCa,UAAW,CACPC,OAAQ,QACRS,QAAS,WACTR,QAAS,OACTC,WAAY,SACZC,aAAc,SACdC,eAAgB,SAChBC,SAAU,OACVC,WAAY,s3BAyBLuF,GArBE,WAEb,IAAM/E,EAAUjB,KAEhB,OACI,kBAACkB,EAAA,EAAD,CAAMhB,WAAS,GAEX,kBAACgB,EAAA,EAAD,CACIC,UAAWF,EAAQf,UACnBH,GAAI,GACJqB,MAAI,GAGJ,kBAAC6E,GAAD,SCNDC,GAhBH,WACV,OACE,kBAAC,EAAD,KACA,kBAAC,EAAD,KAEE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWrF,IACjC,kBAAC,IAAD,CAAOoF,KAAK,YAAYC,UAAWL,KACnC,kBAAC,IAAD,CAAOI,KAAK,SAASC,UAAWR,QCPpBS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OACL,kBAAC,IAAD,KACI,kBAAC,GAAD,OAEJC,SAASC,eAAe,SDoHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrI,KAAK,SAAAsI,GACjCA,EAAaC,gB","file":"static/js/main.76f4d97d.chunk.js","sourcesContent":["class TokenStore {\n    static setToken(token) {\n        localStorage.setItem('token', token);\n    };\n    static getToken() {\n        return localStorage.getItem('token');\n    };\n    static clearToken() {\n        localStorage.removeItem('token');\n    };\n};\n  \nexport default TokenStore;\n  ","import React, { createContext, useState, useEffect } from 'react';\n\nimport { useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery } from '@material-ui/core';\n\nimport TokenStore from '../library/TokenStore';\n\nexport const AuthContext = createContext();\n\nconst initUser = {\n  info: '',\n  token: TokenStore.getToken(),\n};\n\nexport const AuthProvider = (props) => {\n\n  const [user, setUser] = useState({ ...initUser });\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  // useEffect(() => {\n  //   if (!user.token) { return; }\n  //   fetch('/api/users/verify')\n  //     .then(res => res.json())\n  //     .then((user) => {\n  //       console.log(user);\n  //       return setUser({ ...user });\n  //     })\n  //     .catch(() => { console.log('Oops...'); });\n  // }, [user]);\n\n  const handleLogin = (user, authToken) => {\n    TokenStore.setToken(authToken);\n    setUser({\n      info: { ...user },\n      token: authToken,\n    });\n  };\n\n  const handleLogout = () => {\n    TokenStore.clearToken();\n    setUser({ ...initUser });\n    return setLoggedIn(false);\n  };\n\n  const getNewStory = () => {\n    fetch('/api/users/portfolio')\n      .then(res => res.json())\n      .then((user) => { return setUser({ ...user }); })\n      .catch(() => { console.log('Ooops...'); });\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        handleLogin,\n        handleLogout,\n        loggedIn,\n        getNewStory,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n","import React, { createContext } from 'react';\n\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\nexport const MediaContext = createContext();\n\nexport const MediaProvider = (props) => {\n\n    const theme = useTheme();\n\n    const xl = useMediaQuery(theme.breakpoints.up('lg'))\n    const lg = useMediaQuery(theme.breakpoints.down('lg'));\n    const md = useMediaQuery(theme.breakpoints.down('md'));\n    const sm = useMediaQuery(theme.breakpoints.down('sm'));\n    const xs = useMediaQuery(theme.breakpoints.down('xs'));\n\n    return (\n        <MediaContext.Provider value={{ xl, lg, md, sm, xs }} >\n            { props.children }\n        </MediaContext.Provider>\n    );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Grid,\n    Typography,\n    Button,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        height: '100vh',\n        display: 'flex',\n        alignItems: 'center',\n        alignContent: 'center',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        background: 'linear-gradient(200deg, rgba(213, 213, 213, 0.01) 0%, rgba(213, 213, 213, 0.01) 14.286%,rgba(140, 140, 140, 0.01) 14.286%, rgba(140, 140, 140, 0.01) 28.572%,rgba(52, 52, 52, 0.01) 28.572%, rgba(52, 52, 52, 0.01) 42.858%,rgba(38, 38, 38, 0.01) 42.858%, rgba(38, 38, 38, 0.01) 57.144%,rgba(159, 159, 159, 0.01) 57.144%, rgba(159, 159, 159, 0.01) 71.42999999999999%,rgba(71, 71, 71, 0.01) 71.43%, rgba(71, 71, 71, 0.01) 85.71600000000001%,rgba(88, 88, 88, 0.01) 85.716%, rgba(88, 88, 88, 0.01) 100.002%),linear-gradient(337deg, rgba(25, 25, 25, 0.01) 0%, rgba(25, 25, 25, 0.01) 12.5%,rgba(150, 150, 150, 0.01) 12.5%, rgba(150, 150, 150, 0.01) 25%,rgba(84, 84, 84, 0.01) 25%, rgba(84, 84, 84, 0.01) 37.5%,rgba(85, 85, 85, 0.01) 37.5%, rgba(85, 85, 85, 0.01) 50%,rgba(188, 188, 188, 0.01) 50%, rgba(188, 188, 188, 0.01) 62.5%,rgba(80, 80, 80, 0.01) 62.5%, rgba(80, 80, 80, 0.01) 75%,rgba(73, 73, 73, 0.01) 75%, rgba(73, 73, 73, 0.01) 87.5%,rgba(219, 219, 219, 0.01) 87.5%, rgba(219, 219, 219, 0.01) 100%),linear-gradient(203deg, rgba(233, 233, 233, 0.01) 0%, rgba(233, 233, 233, 0.01) 25%,rgba(114, 114, 114, 0.01) 25%, rgba(114, 114, 114, 0.01) 50%,rgba(164, 164, 164, 0.01) 50%, rgba(164, 164, 164, 0.01) 75%,rgba(228, 228, 228, 0.01) 75%, rgba(228, 228, 228, 0.01) 100%),linear-gradient(317deg, rgba(139, 139, 139, 0.02) 0%, rgba(139, 139, 139, 0.02) 16.667%,rgba(44, 44, 44, 0.02) 16.667%, rgba(44, 44, 44, 0.02) 33.334%,rgba(166, 166, 166, 0.02) 33.334%, rgba(166, 166, 166, 0.02) 50.001000000000005%,rgba(2, 2, 2, 0.02) 50.001%, rgba(2, 2, 2, 0.02) 66.668%,rgba(23, 23, 23, 0.02) 66.668%, rgba(23, 23, 23, 0.02) 83.33500000000001%,rgba(21, 21, 21, 0.02) 83.335%, rgba(21, 21, 21, 0.02) 100.002%),linear-gradient(328deg, rgba(3, 3, 3, 0.03) 0%, rgba(3, 3, 3, 0.03) 12.5%,rgba(116, 116, 116, 0.03) 12.5%, rgba(116, 116, 116, 0.03) 25%,rgba(214, 214, 214, 0.03) 25%, rgba(214, 214, 214, 0.03) 37.5%,rgba(217, 217, 217, 0.03) 37.5%, rgba(217, 217, 217, 0.03) 50%,rgba(68, 68, 68, 0.03) 50%, rgba(68, 68, 68, 0.03) 62.5%,rgba(118, 118, 118, 0.03) 62.5%, rgba(118, 118, 118, 0.03) 75%,rgba(200, 200, 200, 0.03) 75%, rgba(200, 200, 200, 0.03) 87.5%,rgba(198, 198, 198, 0.03) 87.5%, rgba(198, 198, 198, 0.03) 100%),linear-gradient(97deg, rgba(195, 195, 195, 0.03) 0%, rgba(195, 195, 195, 0.03) 16.667%,rgba(177, 177, 177, 0.03) 16.667%, rgba(177, 177, 177, 0.03) 33.334%,rgba(170, 170, 170, 0.03) 33.334%, rgba(170, 170, 170, 0.03) 50.001000000000005%,rgba(158, 158, 158, 0.03) 50.001%, rgba(158, 158, 158, 0.03) 66.668%,rgba(121, 121, 121, 0.03) 66.668%, rgba(121, 121, 121, 0.03) 83.33500000000001%,rgba(146, 146, 146, 0.03) 83.335%, rgba(146, 146, 146, 0.03) 100.002%),linear-gradient(268deg, rgba(103, 103, 103, 0.03) 0%, rgba(103, 103, 103, 0.03) 25%,rgba(112, 112, 112, 0.03) 25%, rgba(112, 112, 112, 0.03) 50%,rgba(4, 4, 4, 0.03) 50%, rgba(4, 4, 4, 0.03) 75%,rgba(227, 227, 227, 0.03) 75%, rgba(227, 227, 227, 0.03) 100%),linear-gradient(90deg, hsl(98,0%,0%),hsl(98,0%,0%))',\n    },\n    button: {\n        marginTop: 30,\n        padding: 15,\n        color: 'white',\n        background: 'rgb(255, 255, 255, 0.1)',\n        transition: 'all 0.4s ease',\n        '&:hover': {\n            background: 'rgb(255, 255, 255, 0.2)',\n            transform: 'scale(1.03)',\n        },\n    },\n}));\n\nconst Temp = () => {\n\n    const classes = useStyles();\n\n    return (\n        <Grid container>\n\n            <Grid className={classes.container} item xs={12}>\n\n                <Typography\n                    style={{\n                        color: 'white',\n                        width: '100%',\n                    }}\n                    align=\"center\"\n                    variant=\"h4\"\n                >\n                    Welcome\n                </Typography>\n\n                <Button className={classes.button}>\n                    <Link\n                     style={{\n                         textDecoration: 'none',\n                         color: 'inherit',\n                     }}\n                     to=\"/login\"\n                    >\n                        <Typography>\n                            Login\n                        </Typography>\n                    </Link>\n                </Button>\n\n            </Grid>\n\n        </Grid>\n    );\n};\n\nexport default Temp;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport {\n    Snackbar,\n    SnackbarContent,\n    Typography,\n    Icon,\n    Button,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    success: {\n        backgroundColor: green[600],\n        paddingTop: 20,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    message: {\n        paddingTop: 15,\n        width: '100%',\n    },\n    icon: {\n        position: 'absolute',\n        top: 5,\n        left: '50%',\n    },\n    button: {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n    },\n}));\n\nconst SuccessNotification = (props) => {\n\n    const classes = useStyles();\n\n    return (\n        <Snackbar\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n            }}\n            open={props.success.open}\n            autoHideDuration={6000}\n            onExit={props.toLogin}\n        >\n            <SnackbarContent\n                className={classes.success}\n                classes={{\n                    message: classes.message,\n                }}\n                message={\n                    <Typography\n                        variant=\"body2\"\n                        align=\"center\"\n                    >\n                        <Icon className={classes.icon}>\n                            check\n                        </Icon>\n                        {props.success.message}\n                    </Typography>\n                }\n                action={\n                    <Button\n                        className={classes.button}\n                        onClick={props.closeSuccess}\n                    >\n                        <Icon>close</Icon>\n                    </Button>\n                }\n            />\n        </Snackbar>\n    );\n};\n\nexport default SuccessNotification;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Snackbar,\n    SnackbarContent,\n    Typography,\n    Icon,\n    Button,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    error: {\n        backgroundColor: theme.palette.error.dark,\n        paddingTop: 20,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    message: {\n        paddingTop: 15,\n        width: '100%',\n    },\n    icon: {\n        position: 'absolute',\n        top: 5,\n        left: '50%',\n    },\n    button: {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n    },\n}));\n\nconst ErrorNotification = (props) => {\n\n    const classes = useStyles();\n\n    return (\n        <Snackbar\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n            }}\n            open={props.error.open}\n            autoHideDuration={6000}\n            onClose={props.closeError}\n        >\n            <SnackbarContent\n                className={classes.error}\n                classes={{\n                    message: classes.message,\n                }}\n                message={\n                    <Typography\n                        variant=\"body2\"\n                        align=\"center\"\n                    >\n                        <Icon className={classes.icon}>\n                            error\n                        </Icon>\n                        {props.error.message}\n                    </Typography>\n                }\n                action={\n                    <Button\n                        className={classes.button}\n                        onClick={props.closeError}\n                    >\n                        <Icon>close</Icon>\n                    </Button>\n                }\n            />\n        </Snackbar>\n    );\n};\n\nexport default ErrorNotification;","import React, { Fragment } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { amber } from '@material-ui/core/colors';\nimport {\n    Snackbar,\n    SnackbarContent,\n    Typography,\n    Icon,\n    Button,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    warning: {\n        paddingTop: 20,\n        backgroundColor: amber[600],\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    message: {\n        paddingTop: 15,\n        width: '100%',\n    },\n    icon: {\n        position: 'absolute',\n        top: 5,\n        left: '50%',\n    },\n    button: {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n    },\n}));\n\nconst WarningNotification = (props) => {\n\n    const classes = useStyles();\n\n    return (\n        <Snackbar\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n            }}\n            open={props.warning.open}\n            autoHideDuration={6000}\n            onClose={props.closeWarning}\n        >\n            <SnackbarContent\n                className={classes.warning}\n                classes={{\n                    message: classes.message,\n                }}\n                action={\n                    <Button\n                        className={classes.button}\n                        onClick={props.closeWarning}\n                    >\n                        <Icon>close</Icon>\n                    </Button>\n                }\n                message={\n                    <Typography\n                        variant=\"body2\"\n                        align=\"center\"\n                    >\n\n                        <Icon className={classes.icon}>\n                            warning\n                        </Icon>\n\n                        {props.warning.message}\n\n                    </Typography>\n                }\n            />\n        </Snackbar>\n    );\n};\n\nexport default WarningNotification;","import React, { useContext, useState } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    TextField,\n    Button,\n    Typography,\n    Paper,\n} from '@material-ui/core';\n\nimport { AuthContext } from '../../contexts/AuthContext';\n\nimport SuccessNotification from '../Notifications/SuccessNotification';\nimport ErrorNotification from '../Notifications/ErrorNotification';\nimport WarningNotification from '../Notifications/WarningNotification';\n\nconst initInfo = {\n    email: '',\n    password: '',\n};\n\nconst initNotifications = {\n    open: false,\n    message: '',\n};\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        padding: 15,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexWrap: 'wrap',\n    },\n    inputs: {\n        width: '100%',\n        marginTop: 20,\n    },\n    button: {\n        width: '100%',\n        marginTop: 20,\n        padding: 15,\n        background: 'rgb(0, 0, 0, 0.1)',\n        transition: 'all 0.4s ease',\n        '&:hover': {\n            background: 'rgb(0, 0, 0, 0.3)',\n            transform: 'scale(1.03)',\n        },\n    },\n    signup: {\n        width: '100%',\n        marginTop: 20,\n        padding: 15,\n        background: 'rgb(3, 145, 126, 0.1)',\n        transition: 'all 0.4s ease',\n        '&:hover': {\n            background: 'rgb(0, 0, 0, 0.3)',\n            transform: 'scale(1.03)',\n        },\n    },\n}));\n\nconst LoginForm = () => {\n\n    const auth = useContext(AuthContext);\n    const classes = useStyles();\n\n    const [info, setInfo] = useState({ ...initInfo });\n    const [success, setSuccess] = useState({ ...initNotifications });\n    const [error, setError] = useState({ ...initNotifications });\n    const [warning, setWarning] = useState({ ...initNotifications });\n    const [toLogin, setToLogin] = useState(false);\n\n    const closeError = () => { setError({ ...initNotifications }); };\n    const closeSuccess = () => { setSuccess({ ...initNotifications }); };\n    const closeWarning = () => { setWarning({ ...initNotifications }); };\n\n    const preSubmit = () => {\n        switch (true) {\n            case info.email.length < 2:\n                return setWarning({\n                    open: true,\n                    message: 'Incorrect email!',\n                });\n            case info.password.length < 6:\n                return setWarning({\n                    open: true,\n                    message: 'Incorrect password!',\n                });\n            default:\n                return handleSubmit();\n        }\n    };\n\n    const handleSubmit = () => {\n        const { email, password } = info;\n        fetch('/api/users/login', {\n            method: 'POST',\n            body: JSON.stringify({ email, password }),\n            headers: { 'Content-Type': 'application/json' },\n        })\n            .then(res => res.json())\n            .then((result) => {\n                if (result.error) {\n                    return setError({ open: true, message: result.message });\n                }\n                auth.handleLogin(result.user, result.token);\n                setInfo({ ...initInfo });\n                setSuccess({\n                    open: true,\n                    message: 'Login Successful!',\n                });\n            })\n            .catch(() => { setError({ open: true, message: 'Something went wrong!' }); });\n        };\n\n    const handleRedirect = () => { setToLogin(true); };\n\n    if (toLogin) { return <Redirect to=\"/\" />; }\n    return (\n        <Paper className={classes.paper}>\n\n            <Typography variant=\"h4\">\n                Login\n            </Typography>\n\n            <TextField\n                className={classes.inputs}\n                type=\"email\"\n                variant=\"outlined\"\n                label=\"Email\"\n                value={info.email}\n                onChange={(e) => setInfo({ ...info, email: e.target.value})}\n            />\n\n            <TextField\n                className={classes.inputs}\n                type=\"password\"\n                variant=\"outlined\"\n                label=\"Password\"\n                value={info.password}\n                onChange={(e) => setInfo({ ...info, password: e.target.value})}\n            />\n\n            <Button\n                className={classes.button}\n                onClick={preSubmit}\n            >\n                <Typography>\n                    Submit\n                </Typography>\n            </Button>\n\n            <Button\n                className={classes.signup}\n            >\n                <Link\n                    style={{\n                        textDecoration: 'none',\n                        color: 'inherit',\n                    }}\n                    to=\"/register\"\n                >\n                    <Typography>\n                        Sign Up\n                    </Typography>\n                </Link>\n            </Button>\n\n            <SuccessNotification\n                success={success}\n                closeSuccess={closeSuccess}\n                toLogin={handleRedirect}\n            />\n            <ErrorNotification\n                error={error}\n                closeError={closeError}\n            />\n            <WarningNotification\n                warning={warning}\n                closeWarning={closeWarning}\n            />\n\n        </Paper>\n    );\n};\n\nexport default LoginForm;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\n\nimport LoginForm from '../../components/Login/LoginForm';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        height: '100vh',\n        padding: '0px 30px',\n        display: 'flex',\n        alignItems: 'center',\n        alignContent: 'center',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        background: 'linear-gradient(0, rgba(12, 12, 12, 0.51) 0%, rgba(12, 12, 12, 0.51) 12.5%,rgba(25, 25, 25, 0.51) 12.5%, rgba(25, 25, 25, 0.51) 25%,rgba(39, 39, 39, 0.51) 25%, rgba(39, 39, 39, 0.51) 37.5%,rgba(52, 52, 52, 0.51) 37.5%, rgba(52, 52, 52, 0.51) 50%,rgba(66, 66, 66, 0.51) 50%, rgba(66, 66, 66, 0.51) 62.5%,rgba(79, 79, 79, 0.51) 62.5%, rgba(79, 79, 79, 0.51) 75%,rgba(93, 93, 93, 0.51) 75%, rgba(93, 93, 93, 0.51) 87.5%,rgba(106, 106, 106, 0.51) 87.5%, rgba(106, 106, 106, 0.51) 100%),linear-gradient(90deg, rgb(85, 101, 210) 0%, rgb(85, 101, 210) 12.5%,rgb(73, 116, 214) 12.5%, rgb(73, 116, 214) 25%,rgb(62, 131, 217) 25%, rgb(62, 131, 217) 37.5%,rgb(50, 146, 221) 37.5%, rgb(50, 146, 221) 50%,rgb(38, 162, 225) 50%, rgb(38, 162, 225) 62.5%,rgb(26, 177, 229) 62.5%, rgb(26, 177, 229) 75%,rgb(15, 192, 232) 75%, rgb(15, 192, 232) 87.5%,rgb(3, 207, 236) 87.5%, rgb(3, 207, 236) 100%)',\n    },\n}));\n\nconst Login = () => {\n\n    const classes = useStyles();\n\n    return (\n        <Grid container>\n\n            <Grid className={classes.container} item xs={12}>\n\n                <LoginForm />\n\n            </Grid >\n\n        </Grid>\n    );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\n\nimport { Redirect, Link } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    TextField,\n    Button,\n    Typography,\n    Paper,\n} from '@material-ui/core';\n\nimport SuccessNotification from '../Notifications/SuccessNotification';\nimport ErrorNotification from '../Notifications/ErrorNotification';\nimport WarningNotification from '../Notifications/WarningNotification';\n\nconst initInfo = {\n    username: '',\n    email: '',\n    password: '',\n};\n\nconst initNotifications = {\n    open: false,\n    message: '',\n};\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        padding: 15,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexWrap: 'wrap',\n    },\n    inputs: {\n        width: '100%',\n        marginTop: 20,\n    },\n    button: {\n        width: '100%',\n        marginTop: 20,\n        padding: 15,\n        background: 'rgb(0, 0, 0, 0.1)',\n        transition: 'all 0.4s ease',\n        '&:hover': {\n            background: 'rgb(0, 0, 0, 0.3)',\n            transform: 'scale(1.03)',\n        },\n    },\n    login: {\n        width: '100%',\n        marginTop: 20,\n        padding: 15,\n        background: 'rgb(3, 145, 126, 0.1)',\n        transition: 'all 0.4s ease',\n        '&:hover': {\n            background: 'rgb(0, 0, 0, 0.3)',\n            transform: 'scale(1.03)',\n        },\n    },\n}));\n\nconst LoginForm = () => {\n\n    const [info, setInfo] = useState({ ...initInfo });\n    const [success, setSuccess] = useState({ ...initNotifications });\n    const [error, setError] = useState({ ...initNotifications });\n    const [warning, setWarning] = useState({ ...initNotifications });\n    const [toLogin, setToLogin] = useState(false);\n\n    const closeError = () => { setError({ ...initNotifications }); };\n    const closeSuccess = () => { setSuccess({ ...initNotifications }); };\n    const closeWarning = () => { setWarning({ ...initNotifications }); };\n\n    const classes = useStyles();\n\n    const preSubmit = () => {\n        switch (true) {\n            case info.username.length < 2:\n                return setWarning({\n                    open: true,\n                    message: 'Username must have more than 2 characters!',\n                });\n            case info.password.length < 6:\n                return setWarning({\n                    open: true,\n                    message: 'Password must be more than 6 characters!',\n                });\n            default:\n                return handleSubmit();\n        }\n    };\n\n    const handleSubmit = () => {\n        const { email, password, username } = info;\n        fetch('/api/users/register', {\n            method: 'POST',\n            body: JSON.stringify({ email, password, username }),\n            headers: { 'Content-Type': 'application/json' },\n        })\n            .then(res => res.json())\n            .then((result) => {\n                if (result.error) {\n                    return setError({ open: true, message: result.message });\n                }\n                setInfo({ ...initInfo });\n                setSuccess({ open: true, message: result.message });\n            });\n    };\n\n    const handleRedirect = () => { setToLogin(true); };\n\n    if (toLogin) { return <Redirect to=\"/login\" />; }\n    return (\n        <Paper className={classes.paper}>\n\n            <Typography variant=\"h4\">\n                Sign Up\n            </Typography>\n\n            <TextField\n                className={classes.inputs}\n                variant=\"outlined\"\n                label=\"Username\"\n                value={info.username}\n                onChange={(e) => setInfo({ ...info, username: e.target.value })}\n            />\n\n            <TextField\n                className={classes.inputs}\n                type=\"email\"\n                variant=\"outlined\"\n                label=\"Email\"\n                value={info.email}\n                onChange={(e) => setInfo({ ...info, email: e.target.value})}\n            />\n\n            <TextField\n                className={classes.inputs}\n                type=\"password\"\n                variant=\"outlined\"\n                label=\"Password\"\n                value={info.password}\n                onChange={(e) => setInfo({ ...info, password: e.target.value})}\n            />\n\n            <Button\n                className={classes.button}\n                onClick={preSubmit}\n            >\n                <Typography>\n                    Submit\n                </Typography>\n            </Button>\n\n            <Button\n                className={classes.login}\n            >\n                <Link\n                    style={{\n                        textDecoration: 'none',\n                        color: 'inherit',\n                    }}\n                    to=\"/login\"\n                >\n                    <Typography>\n                        Login\n                    </Typography>\n                </Link>\n            </Button>\n\n            <SuccessNotification\n                success={success}\n                closeSuccess={closeSuccess}\n                toLogin={handleRedirect}\n            />\n            <ErrorNotification\n                error={error}\n                closeError={closeError}\n            />\n            <WarningNotification\n                warning={warning}\n                closeWarning={closeWarning}\n            />\n\n        </Paper>\n    );\n};\n\nexport default LoginForm;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\n\nimport RegisterForm from '../../components/Register/RegisterForm';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        height: '100vh',\n        padding: '0px 30px',\n        display: 'flex',\n        alignItems: 'center',\n        alignContent: 'center',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        background: 'linear-gradient(0, rgba(12, 12, 12, 0.51) 0%, rgba(12, 12, 12, 0.51) 12.5%,rgba(25, 25, 25, 0.51) 12.5%, rgba(25, 25, 25, 0.51) 25%,rgba(39, 39, 39, 0.51) 25%, rgba(39, 39, 39, 0.51) 37.5%,rgba(52, 52, 52, 0.51) 37.5%, rgba(52, 52, 52, 0.51) 50%,rgba(66, 66, 66, 0.51) 50%, rgba(66, 66, 66, 0.51) 62.5%,rgba(79, 79, 79, 0.51) 62.5%, rgba(79, 79, 79, 0.51) 75%,rgba(93, 93, 93, 0.51) 75%, rgba(93, 93, 93, 0.51) 87.5%,rgba(106, 106, 106, 0.51) 87.5%, rgba(106, 106, 106, 0.51) 100%),linear-gradient(90deg, rgb(85, 101, 210) 0%, rgb(85, 101, 210) 12.5%,rgb(73, 116, 214) 12.5%, rgb(73, 116, 214) 25%,rgb(62, 131, 217) 25%, rgb(62, 131, 217) 37.5%,rgb(50, 146, 221) 37.5%, rgb(50, 146, 221) 50%,rgb(38, 162, 225) 50%, rgb(38, 162, 225) 62.5%,rgb(26, 177, 229) 62.5%, rgb(26, 177, 229) 75%,rgb(15, 192, 232) 75%, rgb(15, 192, 232) 87.5%,rgb(3, 207, 236) 87.5%, rgb(3, 207, 236) 100%)',\n    },\n}));\n\nconst Register = () => {\n\n    const classes = useStyles();\n\n    return (\n        <Grid container>\n            \n            <Grid\n                className={classes.container}\n                xs={12}\n                item\n            >\n\n                <RegisterForm />\n\n            </Grid>\n\n        </Grid>\n    );\n};\n\nexport default Register;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { AuthProvider } from './contexts/AuthContext';\nimport { MediaProvider } from './contexts/MediaContext';\n\n// import Social from './pages/Main/Social';\nimport Temp from './pages/Main/Temp';\nimport Login from './pages/Login/Login';\nimport Register from './pages/Register/Register';\n\nconst App = () => {\n  return (\n    <AuthProvider>\n    <MediaProvider>\n      \n      <Switch>\n        <Route exact path=\"/\" component={Temp} />\n        <Route path=\"/register\" component={Register} />\n        <Route path=\"/login\" component={Login} />\n      </Switch>\n\n    </MediaProvider>\n    </AuthProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}